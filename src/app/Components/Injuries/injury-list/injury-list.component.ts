import { Component, OnInit } from '@angular/core';
import { InjuryService } from '../../../Services/injury.service';
import { ToastrService } from 'ngx-toastr';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import * as XLSX from 'xlsx';
import { Injury } from '../../../Interfaces/injury';

@Component({
  selector: 'app-injury-list',
  standalone: true,
  templateUrl: './injury-list.component.html',
  styleUrl: './injury-list.component.css',
  imports: [CommonModule, FormsModule]
})
export class InjuryListComponent implements OnInit {
  injuries: Injury[] = [];

  statistics = {
    toClinic: 0,
    toHospital: 0,
    medicOnly: 0,
    refused: 0,
    medicThenClinic: 0,
    total: 0
  };


  constructor(
    private injuryService: InjuryService,
    private toastr: ToastrService
  ) { }

  ngOnInit(): void {
    this.getInjuries();
  }

  getInjuries() {
    this.injuryService.getAll().subscribe({
      next: data => {
        this.injuries = data;
        this.calculateStats();
      },
      error: () => this.toastr.error('ูุดู ูู ุชุญููู ุงูุจูุงูุงุช ๐')
    });
  }

  calculateStats() {
    const counts = {
      toClinic: 0,
      toHospital: 0,
      medicOnly: 0,
      refused: 0,
      medicThenClinic: 0,
      total: this.injuries.length
    };

    for (let i of this.injuries) {
      const a = i.action?.trim() || '';
      if (a.includes('ุงูุนูุงุฏู') && a.includes('ุงูุงุฒู') && !a.includes('ุงููุณุชุดูู')) counts.toClinic++;
      if (a.includes('ุงููุณุชุดูู')) counts.toHospital++;
      if (a === 'ุชู ุงุญุถุงุฑ ุงููุณุนู ูุชู ุนูู ุงููุงุฒู') counts.medicOnly++;
      if (a.includes('ุฑูุถ') || a.includes('ุงูุงุทูุฆูุงู')) counts.refused++;
      if (a.includes('ุงุญุถุงุฑ ุงููุณุนู') && a.includes('ุงูุนูุงุฏู')) counts.medicThenClinic++;
    }

    this.statistics = counts;
  }


  updateInjury(injury: Injury) {
    this.injuryService.update(injury).subscribe({
      next: () => this.toastr.success('โ ุชู ุงูุญูุธ'),
      error: () => this.toastr.error('โ ูุดู ูู ุงูุชุญุฏูุซ')
    });
  }

  deleteInjury(id: number) {
    this.injuryService.delete(id).subscribe({
      next: () => {
        this.toastr.success('๐๏ธ ุชู ุงูุญุฐู');
        this.getInjuries();
      },
      error: () => this.toastr.error('โ ูุดู ูู ุงูุญุฐู')
    });
  }


  exportToExcel(): void {
    const exportData = this.injuries.map(i => ({
      'ุงูุชุงุฑูุฎ': i.date,
      'ุงูููู': i.day,
      'ุงูุชูููุช': i.time,
      'ุงูููุงู': i.location,
      'ุงุณู ุงูุนุถู ุงููุตุงุจ': i.memberName,
      'ุฑูู ุงูุนุถููุฉ': i.membershipNo,
      'ููุน ุงูุฅุตุงุจุฉ': i.injuryType,
      'ุณุจุจ ุงูุฅุตุงุจุฉ': i.cause,
      'ุงูุฅุฌุฑุงุก': i.action,
      'ูุณุคูู ุงูุณูุงูุฉ': i.safetyOfficer,
      'ุงููุณุนู/ุงูุทุจูุจ': i.medic,
      'ุงูููุชุฑูู': i.control,
      'ุงููุดุฑู': i.supervisor,
      'ููุงุญุธุงุช': i.notes
    }));

    const ws = XLSX.utils.json_to_sheet(exportData);

    const statsStartRow = exportData.length + 3;

    const stats = [
      ['ุงููุตู', 'ุงูุนุฏุฏ'],
      ['ุฅุฌูุงูู ุงูุฐูุงุจ ุฅูู ุงูุนูุงุฏุฉ (ุฅุตุงุจุงุช ุฎูููุฉ)', this.statistics.toClinic],
      ['ุฅุฌูุงูู ุงูุฐูุงุจ ุฅูู ุงูุนูุงุฏุฉ ูุงูุชูุฌูู ูููุณุชุดูู (ุฅุตุงุจุงุช ุญุฑุฌุฉ)', this.statistics.toHospital],
      ['ุฅุฌูุงูู ุงุญุถุงุฑ ุงููุณุนู ููุท (ุฅุตุงุจุงุช ุฎูููุฉ)', this.statistics.medicOnly],
      ['ุฅุฌูุงูู ุฑูุถ ุงุญุถุงุฑ ุงููุณุนู ูุชู ุงูุงุทูุฆูุงู ุนููู', this.statistics.refused],
      ['ุฅุฌูุงูู ุงุญุถุงุฑ ุงููุณุนู ุซู ุงูุฐูุงุจ ููุนูุงุฏุฉ (ุฅุตุงุจุงุช ุญุฑุฌุฉ)', this.statistics.medicThenClinic],
      ['ุงูุฅุฌูุงูู ุงูุนุงู', this.statistics.total]
    ];

    XLSX.utils.sheet_add_aoa(ws, stats, { origin: { r: statsStartRow, c: 4 } });

    ws['!cols'] = Array(14).fill({ wch: 20 });
    ws['!cols'][6] = { wch: 50 }; // ูุตู ุงูุฅุญุตุงุฆูุฉ
    ws['!cols'][7] = { wch: 15 }; // ุงูุนุฏุฏ

    const wb = XLSX.utils.book_new();
    XLSX.utils.book_append_sheet(wb, ws, 'ุณุฌู ุงูุฅุตุงุจุงุช');
    XLSX.writeFile(wb, 'ุณุฌู_ุงูุฅุตุงุจุงุช.xlsx');
  }


}
