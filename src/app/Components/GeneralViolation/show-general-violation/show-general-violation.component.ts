import { Component, OnInit } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { GeneralViolationService } from '../../../Services/general-violation.service';
import { ToastrService } from 'ngx-toastr';
import * as XLSX from 'xlsx';

@Component({
  selector: 'app-show-general-violation',
  standalone: true,
  imports: [CommonModule, FormsModule],
  templateUrl: './show-general-violation.component.html',
  styleUrl: './show-general-violation.component.css'
})
export class ShowGeneralViolationComponent implements OnInit {
  allViolations: any[] = [];

  totalThisMonth = 0;
  totalNoData = 0;
  totalSmokingNoData = 0;
  totalWithData = 0;
  totalAll = 0;

  constructor(
    private _service: GeneralViolationService,
    private _toastr: ToastrService
  ) { }

  ngOnInit(): void {
    this.getViolations();
  }

  getViolations() {
    this._service.getViolationsByCategory('ุนุถู').subscribe({
      next: (data: any[]) => {
        this.allViolations = data;
        this.calculateStats();
      },
      error: () => this._toastr.error('ูุดู ูู ุชุญููู ุงูุจูุงูุงุช ๐')
    });
  }

  calculateStats() {
    const now = new Date();
    const currentMonth = now.getMonth();
    const currentYear = now.getFullYear();

    this.totalThisMonth = this.allViolations.filter(v => {
      const date = new Date(v.date);
      return date.getMonth() === currentMonth &&
        date.getFullYear() === currentYear &&
        /ูุฐูุฑุฉ|ุชุญุฑูุฑ|ุนูู/.test(v.action);
    }).length;

    this.totalNoData = this.allViolations.filter(v => {
      return (!v.memberName || v.memberName.trim() === '' || v.memberName.includes('ูุง ููุฌุฏ')) &&
        (!v.membershipNo || v.membershipNo.trim() === '' || v.membershipNo.includes('ูุง ููุฌุฏ'));
    }).length;

    this.totalSmokingNoData = this.allViolations.filter(v => {
      const noData = (!v.memberName || v.memberName.trim() === '' || v.memberName.includes('ูุง ููุฌุฏ')) &&
        (!v.membershipNo || v.membershipNo.trim() === '' || v.membershipNo.includes('ูุง ููุฌุฏ'));
      return noData && v.violation && v.violation.includes('ุชุฏุฎูู');
    }).length;

    this.totalWithData = this.allViolations.filter(v => {
      return (v.memberName && v.memberName.trim() !== '' && !v.memberName.includes('ูุง ููุฌุฏ')) &&
        (v.membershipNo && v.membershipNo.trim() !== '' && !v.membershipNo.includes('ูุง ููุฌุฏ'));
    }).length;

    this.totalAll = this.totalNoData + this.totalSmokingNoData + this.totalWithData;
  }


  saveEdit(v: any) {
    this._service.updateViolation(v).subscribe({
      next: () => this._toastr.success('โ ุชู ุญูุธ ุงูุชุนุฏูู'),
      error: () => this._toastr.error('โ ูุดู ูู ุงูุญูุธ')
    });
  }

  deleteViolation(id: number) {
    this._service.deleteViolation(id).subscribe({
      next: () => {
        this._toastr.success('๐๏ธ ุชู ุงูุญุฐู');
        this.getViolations();
      },
      error: () => this._toastr.error('โ ูุดู ูู ุงูุญุฐู')
    });
  }


  exportToExcel(): void {
    const exportData = this.allViolations.map((v, i) => ({
      'ู': i + 1,
      'ุงูุชุงุฑูุฎ': v.date,
      'ุงูููู': v.day,
      'ุงูุชูููุช': v.time,
      'ููุน ุงููุฎุงููุฉ': v.violationCategory,
      'ุงูููุงู': v.location,
      'ุงุณู ุงูุนุถู': v.memberName,
      'ุฑูู ุงูุนุถููุฉ': v.membershipNo,
      'ุตุญุจุชู': v.guests,
      'ุนุถููุฉ ุตุญุจุชุฉ': v.guestsMembershipNo,
      'ุงูููุชุฑูู': v.control,
      'ุงููุดุฑู': v.supervisor,
      'ุงูุฅุฌุฑุงุก': v.action,
      'ุงููุฎุงููุฉ': v.violation
    }));

    // ุฃููุงู: ุฌุฏูู ุงูุจูุงูุงุช
    const worksheet = XLSX.utils.json_to_sheet(exportData, { skipHeader: false });

    // ุซุงููุงู: ุงูุฅุญุตุงุฆูุงุช ุจุนุฏ ุตููู ูุงุถููู ูู ููุงูุฉ ุงูุฌุฏูู
    const space = 2;
    const startRow = exportData.length + space + 1;

    const stats = [
      [' ุฅุญุตุงุฆูุงุช ูุฎุงููุงุช ุงูุฃุนุถุงุก'],
      ['ุงููุตู', 'ุงูุนุฏุฏ'],
      [' ุงุฌูุงูู ุงููุฐูุฑุงุช ุฎูุงู ุงูุดูุฑ', this.totalThisMonth],
      [' ุงุฌูุงูู ูุฎุงููุงุช ูุชููุนู ุจุฏูู ุจูุงูุงุช', this.totalNoData],
      [' ุงุฌูุงูู ูุฎุงููุงุช ุงูุชุฏุฎูู ุจุฏูู ุจูุงูุงุช', this.totalSmokingNoData],
      [' ุงุฌูุงูู ุงููุฎุงููุงุช ุจุงูุจูุงูุงุช', this.totalWithData],
      [' ุงูุงุฌูุงูู ุงูุนุงู', this.totalAll],
    ];

    // ูุถูู ุงูุฅุญุตุงุฆูุงุช ููุดูุชูุง ูููู (ูู ุงูุนููุฏ ุงูุฎุงูุณ ูุซูุงู)
    const shiftedStats = stats.map(row => [null, null, null, null, ...row]); // ุจุฏุฃ ูู ุงูุนููุฏ E

    XLSX.utils.sheet_add_aoa(worksheet, shiftedStats, { origin: { r: startRow, c: 2 } });

    // ุชูุณูุน ุงูุฃุนูุฏุฉ
    worksheet['!cols'] = [
      { wch: 3 },  // ู
      { wch: 10 }, // ุงูุชุงุฑูุฎ
      { wch: 8 }, // ุงูููู
      { wch: 6 }, // ุงูุชูููุช
      { wch: 8 }, // ููุน ุงููุฎุงููุฉ
      { wch: 15 }, // ุงูููุงู
      { wch: 30 }, // ุงุณู ุงูุนุถู
      { wch: 8 }, // ุฑูู ุงูุนุถููุฉ
      { wch: 15 }, // ุตุญุจุชุฉ
      { wch: 8 }, // ุนุถููุฉ ุตุญุจุชุฉ
      { wch: 10 }, // ุงูููุชุฑูู
      { wch: 10 }, // ุงููุดุฑู
      { wch: 20 }, // ุงูุฅุฌุฑุงุก
      { wch: 20 }, // ุงููุฎุงููุฉ
      { wch: 5 },  // ูุงุตู ุฅุถุงูู
      { wch: 40 }, // ุนููุฏ ุงูุฅุญุตุงุฆูุฉ
      { wch: 10 }  // ุงูุนุฏุฏ
    ];

    const workbook: XLSX.WorkBook = {
      Sheets: { 'ูุฎุงููุงุช ุงูุฃุนุถุงุก': worksheet },
      SheetNames: ['ูุฎุงููุงุช ุงูุฃุนุถุงุก']
    };

    XLSX.writeFile(workbook, 'ูุฎุงููุงุช_ุงูุฃุนุถุงุก.xlsx');
    this._toastr.success('๐ ุชู ุชุตุฏูุฑ ุงูููู ุจูุฌุงุญ');

  }


}
