import { Component } from '@angular/core';
import { ToastrService } from 'ngx-toastr';
import { GeneralViolationService } from '../../../Services/general-violation.service';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import * as XLSX from 'xlsx';
import Swal from 'sweetalert2';

@Component({
  selector: 'app-show-food-vio',
  standalone: true,
  imports: [CommonModule, FormsModule],
  templateUrl: './show-food-vio.component.html',
  styleUrl: './show-food-vio.component.css'
})
export class ShowFoodVioComponent {
  allViolations: any[] = [];

  constructor(
    private _service: GeneralViolationService,
    private _toastr: ToastrService
  ) { }

  ngOnInit(): void {
    this.getViolations();
  }


  totalNoDataWithAction: number = 0;
  totalWithData: number = 0;
  totalThisMonth: number = 0;
  totalAll: number = 0;

  calculateStatistics() {
    const now = new Date();
    const currentMonth = now.getMonth();
    const currentYear = now.getFullYear();

    this.totalNoDataWithAction = this.allViolations.filter(v =>
      (
        !v.memberName || v.memberName.trim() === '' || v.memberName.includes('ูุง ููุฌุฏ')
      ) &&
      (
        !v.membershipNo || v.membershipNo.trim() === '' || v.membershipNo.includes('ูุง ููุฌุฏ')
      ) &&
      v.action?.includes('ุงุณุชุฌุงุจุฉ')
    ).length;

    this.totalWithData = this.allViolations.filter(v =>
      v.memberName && !v.memberName.includes('ูุง ููุฌุฏ') &&
      v.membershipNo && !v.membershipNo.includes('ูุง ููุฌุฏ')
    ).length;

    this.totalThisMonth = this.allViolations.filter(v => {
      const action = v.action || '';
      const hasKeyword = action.includes('ูุฐูุฑุฉ') || action.includes('ุชุญุฑูุฑ') || action.includes('ุนูู');

      if (!hasKeyword) return false;

      const date = new Date(v.date);
      return date.getMonth() === currentMonth && date.getFullYear() === currentYear;
    }).length;

    this.totalAll = this.allViolations.length;
  }


  getViolations() {
    this._service.getViolationsByCategory('ุฃูู').subscribe({
      next: (data: any[]) => {
        this.allViolations = data;
        this.calculateStatistics(); // <-- ุงุญุณุจ ุงูุฅุญุตุงุฆูุงุช
      },
      error: () => this._toastr.error('ูุดู ูู ุชุญููู ุงูุจูุงูุงุช ๐')
    });
  }


  saveEdit(v: any) {
    this._service.updateViolation(v).subscribe({
      next: () => this._toastr.success('โ ุชู ุญูุธ ุงูุชุนุฏูู'),
      error: () => this._toastr.error('โ ูุดู ูู ุงูุญูุธ')
    });
  }

  deleteViolation(id: number) {
    Swal.fire({
      title: 'ูู ุฃูุช ูุชุฃูุฏุ',
      text: 'ุณูุชู ุญุฐู ูุฐุง ุงูุณุฌู ููุงุฆููุง!',
      icon: 'warning',
      showCancelButton: true,
      confirmButtonText: 'ูุนูุ ุงุญุฐู',
      cancelButtonText: 'ุฅูุบุงุก',
      confirmButtonColor: '#d33',
      cancelButtonColor: '#3085d6',
    }).then((result) => {
      if (result.isConfirmed) {
        this._service.deleteViolation(id).subscribe({
          next: () => {
            Swal.fire('ุชู ุงูุญุฐู!', 'โ ุชู ุญุฐู ุงูุณุฌู ุจูุฌุงุญ.', 'success');
            this.getViolations();
          },
          error: () => {
            Swal.fire('ุฎุทุฃ', 'โ ูุดู ูู ุญุฐู ุงูุณุฌู.', 'error');
          }
        });
      }
    });
  }


  exportToExcel(): void {
    const exportData = this.allViolations.map((v, i) => ({
      'ู': i + 1,
      'ุงูุชุงุฑูุฎ': v.date,
      'ุงูููู': v.day,
      'ุงูููุช': v.time,
      'ููุน ุงููุฎุงููุฉ': v.violationCategory,
      'ุงูููุงู': v.location,
      'ุงุณู ุงูุนุถู': v.memberName,
      'ุงูุนุถููุฉ': v.membershipNo,
      'ุตุญุจุชู': v.guests,
      'ุนุถููุฉ ุตุญุจุชุฉ': v.guestsMembershipNo,
      'ุงูููุชุฑูู': v.control,
      'ุงููุดุฑู': v.supervisor,
      'ุงูุฅุฌุฑุงุก': v.action,
      'ุงููุฎุงููุฉ': v.violation
    }));

    // ุชุญููู ุฌุฏูู ุงููุฎุงููุงุช ุฅูู ูุฑูุฉ
    const ws = XLSX.utils.json_to_sheet(exportData);

    // ุชุญุฏูุฏ ููุงู ุจุฏุงูุฉ ุฌุฏูู ุงูุฅุญุตุงุฆูุงุช ุจุนุฏ ุขุฎุฑ ุตู + 3 ุณุทูุฑ
    const startRow = exportData.length + 3;

    // ุฌุฏูู ุงูุฅุญุตุงุฆูุงุช ุจุดูู ูุฏูู (AOA = Array of Arrays)
    const statsRows = [
      ['ุงููุตู', 'ุงูุนุฏุฏ'],
      ['ุงุฌูุงูู ูุฎุงููุงุช ุงูุงูู ุจุฏูู ุจูุงูุงุช ูุชูุช ุงูุงุณุชุฌุงุจู', this.totalNoDataWithAction],
      ['ุงุฌูุงูู ูุฎุงููุงุช ุงูุงูู ุจุงูุจูุงูุงุช', this.totalWithData],
      ['ุงุฌูุงูู ุงููุฐูุฑุงุช ุฎูุงู ุงูุดูุฑ', this.totalThisMonth],
      ['ุงูุงุฌูุงูู ุงูุนุงู', this.totalAll]
    ];

    // ุฅุถุงูุฉ ุฌุฏูู ุงูุฅุญุตุงุฆูุงุช ุฏุงุฎู ููุณ ุงููุฑูุฉ
    XLSX.utils.sheet_add_aoa(ws, statsRows, { origin: { r: startRow, c: 5 } });

    // ุชูุณูุน ุงูุฃุนูุฏุฉ
    ws['!cols'] = [
      { wch: 5 }, { wch: 10 }, { wch: 8 }, { wch: 6 }, { wch: 10 },
      { wch: 16 }, { wch: 18 }, { wch: 10 }, { wch: 10 }, { wch: 12 },
      { wch: 10 }, { wch: 10 }, { wch: 20 }, { wch: 25 }
    ];

    const workbook: XLSX.WorkBook = {
      Sheets: { 'ูุฎุงููุงุช ุงูุฃูู': ws },
      SheetNames: ['ูุฎุงููุงุช ุงูุฃูู']
    };

    XLSX.writeFile(workbook, 'ูุฎุงููุงุช_ุงูุฃูู.xlsx');
    this._toastr.success('๐ ุชู ุชุตุฏูุฑ ุงูููู ุจูุฌุงุญ');

  }


}
